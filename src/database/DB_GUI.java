/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package database;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ltmer
 */
public class DB_GUI extends javax.swing.JFrame {

    /**
     * Creates new form DB_GUI
     */
    
    private static Connection conn;
    private static Statement stmt;
    
    public DB_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane9 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        agentList1 = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        handlerList1 = new javax.swing.JList<>();
        jScrollPane13 = new javax.swing.JScrollPane();
        jList9 = new javax.swing.JList<>();
        jLabel14 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        handlerList2 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        objName = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        locationList1 = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        operationName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        equipList1 = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        locationList2 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        skillList1 = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        statusList = new javax.swing.JComboBox<>();
        jScrollPane14 = new javax.swing.JScrollPane();
        operationList = new javax.swing.JList<>();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane8.setViewportView(jTextArea3);

        jList5.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Languages", "Performance", "Skills", "Details" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane9.setViewportView(jList5);

        jLabel11.setText("Agents:");

        jList6.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane10.setViewportView(jList6);

        agentList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane11.setViewportView(agentList1);

        jLabel12.setText("View:");

        jButton5.setText("Show Selected");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel13.setText("Handlers:");

        handlerList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane12.setViewportView(handlerList1);

        jList9.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Agents Managed", "Operations Assigned", "Details" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane13.setViewportView(jList9);

        jLabel14.setText("View:");

        jButton6.setText("Show Selected");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Show All");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Show All");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Show All Personnel");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel11)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel13)
                                .addGap(60, 60, 60)
                                .addComponent(jLabel14))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(408, 408, 408))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(56, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(45, 45, 45)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(81, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Role1", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(186, 401, 499, 110));

        jLabel1.setText("Create Mission");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 250, -1, -1));

        handlerList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(handlerList2);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 102, 80));

        jLabel2.setText("-------------------------------------------------------------------------------------------------------------------------------");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 230, -1, -1));

        jLabel3.setText("Potential Mission");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, -1));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(186, 108, 499, 110));

        objName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objNameActionPerformed(evt);
            }
        });
        jPanel2.add(objName, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 102, -1));

        locationList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(locationList1);

        jPanel2.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 120, 140));

        jLabel4.setText("Objective:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, -1, -1));

        jLabel5.setText("Skill Needed:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jLabel6.setText("Location:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, -1, -1));

        operationName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operationNameActionPerformed(evt);
            }
        });
        jPanel2.add(operationName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 102, -1));

        jLabel7.setText("Operation Name:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, -1, -1));

        jLabel8.setText("Handler:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 280, -1, -1));

        equipList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(equipList1);

        jPanel2.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 310, 140, 80));

        jLabel9.setText("Equipment (Available):");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, -1, 20));

        jLabel10.setText("Location:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, -1));

        locationList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(locationList2);

        jPanel2.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 360, 120, 150));

        jButton1.setText("See All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(535, 13, 140, 40));

        jButton2.setText("Create Mission");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(535, 63, 140, 40));

        jButton3.setText("See All Missions");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 270, 150, 50));

        jButton4.setText("Create Mission");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 330, 150, 50));

        skillList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(skillList1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 110, 60));

        jTabbedPane1.addTab("Role2", jPanel2);

        statusList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "success", "failure" }));

        jScrollPane14.setViewportView(operationList);

        jLabel15.setText("Update Missions");

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane15.setViewportView(jTextArea4);

        jButton10.setText("Update Op");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("View All Status");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel16.setText("In Progress Operations:");

        jLabel17.setText("Status Update:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel16)))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel15)
                .addGap(33, 33, 33)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)))
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("Role3", jPanel3);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void objNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_objNameActionPerformed

    private void operationNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operationNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_operationNameActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String selection = jList9.getSelectedValue();
        String handler = handlerList1.getSelectedValue();
        String str = null;
        String result;
        if(selection == "Agents Managed"){
            str= "SELECT codename FROM Agents WHERE agents.handler = '" + handler + "'";
        }else if(selection == "Operations Assigned"){
            str= "SELECT * FROM Mission WHERE mission.handler = '" + handler + "'";
        }else{
            str= "SELECT personnel.* FROM personnel, handlers WHERE personnel.id = handlers.id AND handlers.codename = '" + handler + "'";
        }
        result = runQueryAndReturnString(str);
        if(result!=""){
            jTextArea3.setText(result);
        }else{
            jTextArea3.setText("No Data For Agent On Subject");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String str= "SELECT handlers.codename, personnel.* FROM personnel, handlers WHERE personnel.id = handlers.id";
        jTextArea3.setText(runQueryAndReturnString(str));
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        String str= "SELECT personnel.* FROM personnel ORDER BY role";
        jTextArea3.setText(runQueryAndReturnString(str));
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String selection = jList5.getSelectedValue();
        String agent = agentList1.getSelectedValue();
        String str = null;
        String result;
        if(selection == "Languages"){
            str= "SELECT language FROM languages WHERE languages.agent = '" + agent + "'";
        }else if(selection == "Performance"){
            str= "SELECT op_name, performance FROM mission_performance WHERE mission_performance.agent = '" + agent + "'";
        }else if(selection == "Skills"){
            str= "SELECT skill FROM specialization WHERE specialization.agent = '" + agent + "'";
        }else{
            str= "SELECT personnel.* FROM personnel, agents WHERE personnel.id = agents.id AND agents.codename = '" + agent + "'";
        }
        result = runQueryAndReturnString(str);
        if(result!=""){
            jTextArea3.setText(result);
        }else{
            jTextArea3.setText("No Data For Agent On Subject");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
                String str = "SELECT * FROM agents_info";
                jTextArea3.setText(runQueryAndReturnString(str));
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String str= "SELECT * FROM mission";
        jTextArea1.setText(runQueryAndReturnString(str));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(locationList2.getSelectedValue()==null || operationName.getText()==null || handlerList2.getSelectedValue()==null || handlerList2.getSelectedValue()==null || equipList1.getSelectedValue()==null){
            jTextArea1.setText("There is an issue with your mission input");
            return;
        }
        String loc = locationList2.getSelectedValue();
        String opName = operationName.getText();
        String handler = handlerList2.getSelectedValue();
        String equip = equipList1.getSelectedValue();
        String serial = getSerial(this, equip);
        String change;
        if(serial==null){
            jTextArea1.setText("error finding item");
            return;
        }
        
        change = "UPDATE equipment SET availability = 'in-use' WHERE serial#=" + serial ;
        String remS = DB_GUI.executeInsert(change);
        
        if(opName.length()>0 && serial.length()>0){
            String str = "INSERT INTO Mission (op_name, status, handler, equipment, location) VALUES ('" + opName + "', 'in-progress', '" + handler + "', '" + serial + "', '" + loc + "')";
            String resultString = DB_GUI.executeInsert(str);
            String result = "SELECT * FROM mission WHERE op_name = '" + opName + "'";
            jTextArea1.setText(runQueryAndReturnString(result));
        }else{
            jTextArea1.setText("There is an issue with your mission input");
        }
        
        populateEquipList(this);
        populateOpList(this);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String str= "SELECT * FROM potential_missions";
        jTextArea2.setText(runQueryAndReturnString(str));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(locationList1.getSelectedValue()==null || objName.getText()==null || skillList1.getSelectedValue()==null){
            jTextArea2.setText("There is an issue with your mission input");
            return;
        }
        String loc = locationList1.getSelectedValue();
        String obj = objName.getText();
        String skill = skillList1.getSelectedValue();

        if(obj.length()>0){
            String str = "INSERT INTO potential_missions (objective, skill_needed, location) VALUES ('" + obj + "', '" + skill + "', '" + loc + "')";
            String resultString = DB_GUI.executeInsert(str);
            jTextArea1.setText(resultString + str);
        }else{
            jTextArea1.setText("There is an issue with your mission input");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        String str= "SELECT op_name, status FROM mission";
        jTextArea4.setText(runQueryAndReturnString(str));
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String upd = "UPDATE mission SET status = '" + statusList.getSelectedItem().toString() +"' WHERE op_name = '" + operationList.getSelectedValue() + "'" ;
        System.out.println(upd);
        String res = DB_GUI.executeInsert(upd);
        
        String serial = getMissionSerial(this, operationList.getSelectedValue());
        
        upd = "UPDATE equipment SET availability = 'available' WHERE serial# = '" + serial + "'" ;
        System.out.println(upd);
        res = DB_GUI.executeInsert(upd);
        String result = "SELECT * FROM mission WHERE op_name = '" + operationList.getSelectedValue() + "'";
        jTextArea4.setText(runQueryAndReturnString(result));
        populateEquipList(this);
        populateOpList(this);
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    private static String runQueryAndReturnString(String q) {
        ResultSet result = null;
        String res = "";

        try {
            result = stmt.executeQuery(q);
            ResultSetMetaData rsmd = result.getMetaData();
            int colCount = rsmd.getColumnCount();
            if (!result.next()) { // check if query is empty
                System.out.println("Error. Could not obtain requested info.");
                return "";
            }
            //==========
            //READ THE HEADER (Column names + horizontal line)
            for (int i = 1; i <= colCount; i++) {
                res = res + rsmd.getColumnName(i) + "\t";
            }
            res = res + "\n";
            for (int i = 1; i <= colCount; i++) {
                res = res + "------";
            }
            res = res + "\n";
            //=============

            //print 1st row:
            for (int i = 1; i <= colCount; i++) {
                res = res + result.getString(i) + "\t";
            }
            res = res + "\n";

            //print the rest
            while (result.next()) {
                for (int i = 1; i <= colCount; i++) {
                    res = res + result.getString(i) + "\t";
                }
                res = res + "\n";
            }
        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
            res = ex.getSQLState();
        }
        return res;
    }
    
    private static String getSerial(DB_GUI gui, String item){
        String sql = "SELECT serial# FROM equipment where item='" + item + "' and availability='available'";
        String serial;

        try {
            ResultSet result = stmt.executeQuery(sql);;

            if (!result.next()) { // check if query is empty
                System.out.println("Error. Could not obtain requested info.");
                return null;
            } else {
                result.next();
                result.next();
                serial = result.getString(1);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getSQLState());
            return null;
        }
        return serial;
    }
    
    private static String getMissionSerial(DB_GUI gui, String opName){
        String sql = "SELECT serial# FROM equipment, mission WHERE mission.equipment=equipment.serial# AND mission.op_name = '" + opName + "'";
        String serial;
        
        try {
            ResultSet result = stmt.executeQuery(sql);

            if (!result.next()) { // check if query is empty
                System.out.println("Error. Could not obtain requested info.");
                return null;
            } else {
                serial = result.getString(1);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getSQLState());
            return null;
        }
        return serial;
    }
    
    private static void populateAgentList(DB_GUI gui) {
        String sql = "SELECT codename FROM agents";
        try {
            ResultSet result = stmt.executeQuery(sql);

            ArrayList<String> l1 = new ArrayList<>();

            if (!result.next()) { // check if query is empty
                System.out.println("Error. Could not obtain requested info.");
                return;
            } else {

                do {
                    String s1 = result.getString(1);
                    //System.out.println(s1);
                    l1.add(s1);
                } while (result.next());
            }
            String[] strings = l1.toArray(String[]::new);
            gui.agentList1.setListData(strings);

        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getSQLState());
        }
    }
    
    private static void populateHandlerList(DB_GUI gui) {
        String sql = "SELECT codename FROM handlers";
        try {
            ResultSet result = stmt.executeQuery(sql);

            ArrayList<String> l1 = new ArrayList<>();

            if (!result.next()) { // check if query is empty
                System.out.println("Error. Could not obtain requested info.");
                return;
            } else {

                do {
                    String s1 = result.getString(1);
                    //System.out.println(s1);
                    l1.add(s1);
                } while (result.next());
            }
            String[] strings = l1.toArray(String[]::new);
            gui.handlerList1.setListData(strings);
            gui.handlerList2.setListData(strings);
        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getSQLState());
        }
    }
    
    private static void populateLocationList(DB_GUI gui) {
        String sql = "SELECT city FROM Locations";
        try {
            ResultSet result = stmt.executeQuery(sql);

            ArrayList<String> l1 = new ArrayList<>();

            if (!result.next()) { // check if query is empty
                System.out.println("Error. Could not obtain requested info.");
                return;
            } else {

                do {
                    String s1 = result.getString(1);
                    //System.out.println(s1);
                    l1.add(s1);
                } while (result.next());
            }
            String[] strings = l1.toArray(String[]::new);
            gui.locationList1.setListData(strings);
            gui.locationList2.setListData(strings);

        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getSQLState());
        }
    }
    
    private static void populateEquipList(DB_GUI gui) {
        String sql = "SELECT item FROM equipment WHERE availability = 'available' group by item";
        try {
            ResultSet result = stmt.executeQuery(sql);

            ArrayList<String> l1 = new ArrayList<>();

            if (!result.next()) { // check if query is empty
                System.out.println("Error. Could not obtain requested info.");
                return;
            } else {

                do {
                    String s1 = result.getString(1);
                    //System.out.println(s1);
                    l1.add(s1);
                } while (result.next());
            }
            String[] strings = l1.toArray(String[]::new);
            gui.equipList1.setListData(strings);
        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getSQLState());
        }
    }
    
    private static void populateSkillList(DB_GUI gui) {
        String sql = "SELECT skill FROM specialization GROUP BY skill";
        try {
            ResultSet result = stmt.executeQuery(sql);

            ArrayList<String> l1 = new ArrayList<>();

            if (!result.next()) { // check if query is empty
                System.out.println("Error. Could not obtain requested info.");
                return;
            } else {

                do {
                    String s1 = result.getString(1);
                    //System.out.println(s1);
                    l1.add(s1);
                } while (result.next());
            }
            String[] strings = l1.toArray(String[]::new);
            gui.skillList1.setListData(strings);

        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getSQLState());
        }
    }
    
    private static void populateOpList(DB_GUI gui) {
        String sql = "SELECT op_name FROM mission WHERE status = 'in-progress'";
        try {
            ResultSet result = stmt.executeQuery(sql);

            ArrayList<String> l1 = new ArrayList<>();

            if (!result.next()) { // check if query is empty
                System.out.println("Error. Could not obtain requested info.");
                return;
            } else {

                do {
                    String s1 = result.getString(1);
                    //System.out.println(s1);
                    l1.add(s1);
                } while (result.next());
            }
            String[] strings = l1.toArray(String[]::new);
            gui.operationList.setListData(strings);

        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getSQLState());
        }
    }

    private static String executeInsert(String sql) {
        String res = "";
        try {
            //System.out.println("sql: " + sql);
            CallableStatement callStmt = conn.prepareCall(sql);
            //callStmt.registerOutParameter(2, Types.INTEGER);
            System.out.println("callStmt: " + callStmt);
            int updateCnt = callStmt.executeUpdate();
            System.out.println(callStmt.getFetchSize());
            System.out.println("(updateCount=" + updateCnt + ")");

        } catch (SQLException ex) {
            res = ex.getMessage();
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        return res;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DB_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DB_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DB_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DB_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //Establish a connection:
        try {
            String username = "", 
                    password = "";
            conn = DriverManager.getConnection(
                    "jdbc:oracle:thin:@oracle2.wiu.edu:1521/orclpdb1",
                    username, password); // get a connection to database
            conn.setAutoCommit(true);
            stmt = conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(DB_GUI.class.getName()).log(Level.SEVERE, null, ex);//Generated
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DB_GUI gui = new DB_GUI();
                gui.setVisible(true);
                populateAgentList(gui);
                populateHandlerList(gui);
                populateLocationList(gui);
                populateEquipList(gui);
                populateSkillList(gui);
                populateOpList(gui);
                //Populate components if needed:
                //populateComboBox3(gui);
                //populateList1(gui);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> agentList1;
    private javax.swing.JList<String> equipList1;
    private javax.swing.JList<String> handlerList1;
    private javax.swing.JList<String> handlerList2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList5;
    private javax.swing.JList<String> jList6;
    private javax.swing.JList<String> jList9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JList<String> locationList1;
    private javax.swing.JList<String> locationList2;
    private javax.swing.JTextField objName;
    private javax.swing.JList<String> operationList;
    private javax.swing.JTextField operationName;
    private javax.swing.JList<String> skillList1;
    private javax.swing.JComboBox<String> statusList;
    // End of variables declaration//GEN-END:variables
}
